// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using System;
using TDDSI.COMPRAMOTOS.BACKEND.Infrastructure.PostgreSql.Persistence;

#nullable disable

namespace TDDSI.COMPRAMOTOS.BACKEND.Infrastructure.PostgreSql.Migrations;
[DbContext( typeof( ApplicationDbContext ) )]
partial class ApplicationDbContextModelSnapshot : ModelSnapshot {
    protected override void BuildModel( ModelBuilder modelBuilder ) {
#pragma warning disable 612, 618
        modelBuilder
            .HasDefaultSchema( "TDDSI.COMPRAMOTOS.BACKENDMS" )
            .HasAnnotation( "ProductVersion", "7.0.18" )
            .HasAnnotation( "Relational:MaxIdentifierLength", 63 );

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns( modelBuilder );

        modelBuilder.Entity( "TDDSI.COMPRAMOTOS.BACKEND.Domain.Users.User", b => {
            b.Property<Guid>( "Id" )
                .ValueGeneratedOnAdd()
                .HasColumnType( "uuid" );

            b.Property<bool>( "Enabled" )
                .HasColumnType( "boolean" );

            b.Property<string>( "FirstName" )
                .IsRequired()
                .HasColumnType( "text" );

            b.Property<string>( "SecondName" )
                .HasColumnType( "text" );

            b.Property<string>( "SecondSurName" )
                .HasColumnType( "text" );

            b.Property<string>( "SurName" )
                .IsRequired()
                .HasColumnType( "text" );

            b.HasKey( "Id" );

            b.ToTable( "Users", "TDDSI.COMPRAMOTOS.BACKENDMS" );
        } );

        modelBuilder.Entity( "TDDSI.COMPRAMOTOS.BACKEND.Domain.WeatherForecasts.WeatherForecast", b => {
            b.Property<Guid>( "Id" )
                .ValueGeneratedOnAdd()
                .HasColumnType( "uuid" );

            b.Property<DateOnly>( "Date" )
                .HasColumnType( "date" );

            b.Property<bool>( "Enabled" )
                .HasColumnType( "boolean" );

            b.Property<string>( "Summary" )
                .HasColumnType( "text" );

            b.Property<int>( "Temperature" )
                .HasColumnType( "integer" );

            b.Property<int>( "TemperatureC" )
                .HasColumnType( "integer" );

            b.HasKey( "Id" );

            b.ToTable( "WeatherForecasts", "TDDSI.COMPRAMOTOS.BACKENDMS" );
        } );

        modelBuilder.Entity( "TDDSI.COMPRAMOTOS.BACKEND.Domain.WeatherForecastsHistories.WeatherForecastsHistory", b => {
            b.Property<Guid>( "Id" )
                .ValueGeneratedOnAdd()
                .HasColumnType( "uuid" );

            b.Property<string>( "CreatedByUser" )
                .HasColumnType( "text" );

            b.Property<DateOnly?>( "CreatedDate" )
                .HasColumnType( "date" );

            b.Property<bool>( "Enabled" )
                .HasColumnType( "boolean" );

            b.Property<string>( "LastModifiedByUser" )
                .HasColumnType( "text" );

            b.Property<DateOnly?>( "LastModifiedDate" )
                .HasColumnType( "date" );

            b.Property<string>( "Proccess" )
                .HasColumnType( "text" );

            b.HasKey( "Id" );

            b.ToTable( "WeatherForecastsHistories", "TDDSI.COMPRAMOTOS.BACKENDMS" );
        } );
#pragma warning restore 612, 618
    }
}
